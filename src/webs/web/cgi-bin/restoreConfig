#! /bin/sh

# Close standard input by respawning ourselves 
if [ -z "$SECOND_EXEC" ]; then
	SECOND_EXEC=1
	export SECOND_EXEC
	exec $0 <&-
fi

CGIDIR=`pwd`
UPGDIR=/tmp/etc

echo "Content-type: text/html"
echo ""
echo "<HTML>"
echo "<HEAD>"
echo "<TITLE>Albatross</TITLE>"
echo "<link rel='stylesheet' type='text/css' href='/styles.css'>"
echo "</HEAD>"

SevereError ()
{
    echo "<BODY topmargin=4 leftmargin=4>"
    echo "<div class=title>Configuration</div><hr>"
    echo "<div class=title><b>Restore Configuration</b></div><hr>"
    echo "<p class=normaltext style='margin-top:0;padding-top:0;'>"
    echo "<font color=red>"
    echo "$*"
    echo "</font></p>"
    echo "</BODY>"
    echo "</HTML>"
    exec false
}

Error ()
{
    echo "<p class=normaltext style='margin-top:0;padding-top:0;'>"
    echo "<font color=red>"
    echo "$*"
    echo "</font></p>"
    echo "</BODY>"
    echo "</HTML>"
    exec false
}

rm -rf $UPGDIR
mkdir -p $UPGDIR

cd $UPGDIR
[ "$?" -ne 0 ] && SevereError "Failed to create temporary directory for restore."

# We expect to be called from webs in response to POST form-data
if [ -n "$PATH_STDIN" -a -f "$PATH_STDIN" ]; then

    MSG=`$CGIDIR/getTarball $PATH_STDIN`
    [ "$?" -ne 0 ] && SevereError "Extracting tarball from form-data failed.<br>$MSG"

elif [ -n "FACTORY_DEFAULTS" ]; then
    PATH_STDIN="/etc/factory-defaults.tgz"
else
    SevereError "Not called properly -- Missing PATH_STDIN."
fi

echo "<BODY topmargin=4 leftmargin=4>"
echo "<div class=title>Configuration</div><hr>"
echo "<div class=title><b>Restore Configuration</b></div><hr>"

echo "<p class=normaltext style='margin-top:0;padding-top:0;'>"
echo "<font color=darkred><b>Restoring archive...</b></font></p>"

[ -f $PATH_STDIN ] || Error "Could not find archive $PATH_STDIN."

tar xzf $PATH_STDIN .dex28-config 
if [ "$?" -ne 0 ]; then
    Error "Archive seems not to have valid configuration."
fi

PLT1=`sed 's/"/ /g' /etc/sysconfig/albatross/global | sed 's/=/ /g' | awk '$1 == "PLATFORM" { print $2; exit 0 }'`
PLT2=`sed 's/"/ /g' .dex28-config | sed 's/=/ /g' | awk '$1 == "PLATFORM" { print $2; exit 0 }'`

if [ "$PLT1" != "$PLT2" ]; then
    Error "Archive contains configuration for <b>${PLT2:-unknown}</b> platform. Our platform is <b>${PLT1:-unknown}</b>."
fi

VER1=`sed 's/"/ /g' /etc/sysconfig/albatross/version | sed 's/=/ /g' | awk '$1 == "VERSION" { print $2; exit 0 }'`
VER2=`sed 's/"/ /g' .dex28-config | sed 's/=/ /g' | awk '$1 == "VERSION" { print $2; exit 0 }'`

if [ "$VER1" != "$VER2" ]; then
    Error "Archive contains configuration for firmware version <b>${VER2:-unknown}</b>. Our firmware version is <b>${VER1:-unknown}</b>."
fi

echo "<pre style='margin-top:0;padding-top:0;'>"

if [ `uname -m` = "armv4tl" ]; then

    ( cd /; tar xvzf $PATH_STDIN -T /dev/stdin <<-EOF )
etc/shadow
etc/hosts
etc/resolv.conf
etc/network/interfaces
etc/rc.d/init.d/local
etc/rc.d/init.d/services
etc/sysconfig/hostname
etc/sysconfig/basedate
etc/sysconfig/ntp_servers
etc/sysconfig/snmpd.conf
etc/sysconfig/webs
etc/sysconfig/albatross/ext-ports.cfg
etc/sysconfig/albatross/gw-ports.cfg
etc/sysconfig/albatross/users.cfg
etc/sysconfig/albatross/smbpasswd
etc/sysconfig/albatross/smb.conf
etc/xinetd.d/albatross
etc/xinetd.d/telnet
EOF
    RETVAL=$?

else

    ( cd /; tar xvzf $PATH_STDIN -T - <<-EOF )
etc/hosts
etc/resolv.conf
etc/rc.d/rc.local
etc/sysconfig/webs
etc/sysconfig/network
etc/sysconfig/network-scripts/ifcfg-eth0
etc/sysconfig/albatross/ext-ports.cfg
etc/sysconfig/albatross/gw-ports.cfg
etc/sysconfig/albatross/users.cfg
etc/sysconfig/albatross/smb.conf
etc/xinetd.d/albatross
etc/xinetd.d/telnet
EOF
    RETVAL=$?

fi

if [ "$RETVAL" -ne 0 ]; then
    echo "</pre>"
    Error "Failed to unpack archive."
fi

echo "</pre>"

echo "<p class=normaltext style='margin-top:0;padding-top:0;'>"
echo "<font color=darkblue><b>System configuration is successfully restored.</b></font><br><br>"
echo "Navigate to <a href='/secure/Config/Config1.asp'>Configuration - Network Settings</a>"
echo "to verify, and perheps apply configured parameters."
echo "</BODY>"
echo "</HTML>"

cd $CGIDIR
rm -rf $UPGDIR

exit 0
